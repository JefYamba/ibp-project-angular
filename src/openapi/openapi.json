{
    "openapi": "3.0.1",
    "info": {
        "title": "Based Programming Project REST API - JefYamba",
        "description": "OpenApi documentation for Internet Based Programming Project",
        "contact": {
            "name": "JefYamba",
            "url": "https://github.com/JefYamba",
            "email": "joph.e.f.yamba@gmail.com"
        },
        "version": "1"
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": "Local Env"
        }
    ],
    "security": [
        {
            "bearerAuth": [

            ]
        }
    ],
    "paths": {
        "/ibp/v1/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all the users [For admin only]",
                "description": "Fetch a page of users",
                "operationId": "getAllUsers",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageUserResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update a user [For admin or current logged user only]",
                "description": "modifies an existing user",
                "operationId": "update",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request/ Invalid parameter",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not acceptable/ Invalid object",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Add a user [For admin only]",
                "description": "register a new user",
                "operationId": "register",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request/ Invalid parameter",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not acceptable/ Invalid object",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibp/v1/users/{user_id}/update_role": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Change user's role [For admin only]",
                "description": "Change user's role",
                "operationId": "changeRole",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string",
                                "enum": [
                                    "USER",
                                    "ADMIN"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request/ Invalid parameter",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibp/v1/users/{user_id}/update_password": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Change user's password [For current logged user only]",
                "description": "Change user's password",
                "operationId": "changePassword",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request/ Invalid parameter",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not acceptable/ Invalid object",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibp/v1/messages": {
            "get": {
                "tags": [
                    "Message"
                ],
                "summary": "Get all the messages [For admin only]",
                "description": "Fetch a page of messages",
                "operationId": "getAllMessages",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMessageResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Message"
                ],
                "summary": "Update a message [For current logged user as sender only]",
                "description": "modifies an existing message",
                "operationId": "update_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Message"
                ],
                "summary": "Send a message [For current logged user as sender only]",
                "description": "send a new message",
                "operationId": "register_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibp/v1/books": {
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Get all the books",
                "description": "Fetch a page of books",
                "operationId": "getAllBooks",
                "parameters": [
                    {
                        "name": "searchKey",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": ""
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageBookResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Book"
                ],
                "summary": "Update a book  [For admin only]",
                "description": "modifies an existing book",
                "operationId": "update_2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request/ Invalid parameter",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookResponse"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not acceptable/ Invalid object",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Book"
                ],
                "summary": "Add a book",
                "description": "register a new book  [For admin only]",
                "operationId": "register_2",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BookRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookResponse"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Not acceptable/ Invalid object",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibp/v1/announcements": {
            "get": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Get all the announcements",
                "description": "Fetch a page of announcements",
                "operationId": "getAnnouncements",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAnnouncementResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Update an announcement  [For admin only]",
                "description": "modifies an existing announcement",
                "operationId": "update_3",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnnouncementRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnouncementResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request/ Invalid parameter",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnouncementResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Make an announcement  [For admin only]",
                "description": "register an announcement",
                "operationId": "register_3",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnnouncementRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnouncementResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request/ Invalid parameter",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnouncementResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibp/v1/users/{user_id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by Id [For admin or current logged user only]",
                "description": "fetch a user using the id",
                "operationId": "get",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register user image profile [For admin or current logged user only]",
                "description": "set an image profile for an existing user",
                "operationId": "setImageProfile",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "type": "object",
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request/ Invalid parameter",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a user [For admin only]",
                "description": "Delete an existing user",
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request/ Invalid parameter",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibp/v1/books/{book_id}": {
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Get book by Id",
                "description": "fetch a book using the id",
                "operationId": "get_2",
                "parameters": [
                    {
                        "name": "book_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Book"
                ],
                "summary": "Register book image cover  [For admin only]",
                "description": "set an image cover for an existing book",
                "operationId": "setImageCover",
                "parameters": [
                    {
                        "name": "book_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "image"
                                ],
                                "type": "object",
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request/ Invalid parameter",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Book"
                ],
                "summary": "Delete a book [For admin only]",
                "description": "Delete an existing book",
                "operationId": "delete_2",
                "parameters": [
                    {
                        "name": "book_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request/ Invalid parameter",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibp/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Authenticate",
                "description": "Tries to authenticate a user",
                "operationId": "login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthentificationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthentificationResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized / Can't authenticate",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthentificationResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibp/v1/messages/{message_id}": {
            "get": {
                "tags": [
                    "Message"
                ],
                "summary": "Get message by Id [For admin or current logged user as sender/receiver only]",
                "description": "fetch a message using the id",
                "operationId": "get_1",
                "parameters": [
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Message"
                ],
                "summary": "Delete a message [For admin only]",
                "description": "Delete an existing message",
                "operationId": "delete_1",
                "parameters": [
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request/ Invalid parameter",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibp/v1/messages/sender/{sender_id}": {
            "get": {
                "tags": [
                    "Message"
                ],
                "summary": "Get messages by sender  [For admin or current logged user as sender only]",
                "description": "Fetch a page of messages by sender using sender id",
                "operationId": "getAllMessagesForSender",
                "parameters": [
                    {
                        "name": "sender_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMessageResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibp/v1/messages/receiver/{receiver_id}": {
            "get": {
                "tags": [
                    "Message"
                ],
                "summary": "Get messages by receiver [For admin or current logged user as receiver only]",
                "description": "Fetch a page of messages by receiver using receiver id",
                "operationId": "getAllMessagesForReceiver",
                "parameters": [
                    {
                        "name": "receiver_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMessageResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibp/v1/messages/admins": {
            "get": {
                "tags": [
                    "Message"
                ],
                "summary": "Get all the admin messages [For admin only]",
                "description": "Fetch a page of messages for admins",
                "operationId": "getAllMessagesForAdmins",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibp/v1/images/user/{imageName}": {
            "get": {
                "tags": [
                    "Image"
                ],
                "summary": "Get User image profile [For admin or current logged only]",
                "description": "fetch a user's image profile using the image complete name",
                "operationId": "getUrlImageUser",
                "parameters": [
                    {
                        "name": "imageName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "image/png": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "byte"
                                    }
                                }
                            },
                            "image/jpeg": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "byte"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request / Invalid parameter",
                        "content": {
                            "image/png": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "byte"
                                    }
                                }
                            },
                            "image/jpeg": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "byte"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Internal server error",
                        "content": {
                            "image/png": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "byte"
                                    }
                                }
                            },
                            "image/jpeg": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "byte"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibp/v1/images/book/{imageName}": {
            "get": {
                "tags": [
                    "Image"
                ],
                "summary": "Get Book image cover",
                "description": "fetch a book's image cover using the image complete name",
                "operationId": "getUrlImageBook",
                "parameters": [
                    {
                        "name": "imageName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "image/png": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "byte"
                                    }
                                }
                            },
                            "image/jpeg": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "byte"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request / Invalid parameter",
                        "content": {
                            "image/png": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "byte"
                                    }
                                }
                            },
                            "image/jpeg": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "byte"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Internal server error",
                        "content": {
                            "image/png": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "byte"
                                    }
                                }
                            },
                            "image/jpeg": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": "byte"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibp/v1/books/latest": {
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Get all the books ordered by the latest",
                "description": "Fetch a page of books ordered by the latest",
                "operationId": "getAllLatestBooks",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 0
                        }
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageBookResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ibp/v1/announcements/{announcement_id}": {
            "get": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Get announcement by Id",
                "description": "fetch a announcement using the id",
                "operationId": "get_3",
                "parameters": [
                    {
                        "name": "announcement_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnouncementResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnouncementResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Announcement"
                ],
                "summary": "Delete an announcement  [For admin only]",
                "description": "Delete an existing announcement",
                "operationId": "delete_3",
                "parameters": [
                    {
                        "name": "announcement_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request/ Invalid parameter",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UserRequest": {
                "required": [
                    "email",
                    "firstName",
                    "lastName"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "MALE",
                            "FEMALE"
                        ]
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                }
            },
            "UserResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "MALE",
                            "FEMALE"
                        ]
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "USER",
                            "ADMIN"
                        ]
                    }
                }
            },
            "ChangePasswordRequest": {
                "required": [
                    "confirmPassword",
                    "newPassword",
                    "oldPassword"
                ],
                "type": "object",
                "properties": {
                    "oldPassword": {
                        "type": "string"
                    },
                    "newPassword": {
                        "type": "string"
                    },
                    "confirmPassword": {
                        "type": "string"
                    }
                }
            },
            "MessageRequest": {
                "required": [
                    "content",
                    "senderId"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "content": {
                        "type": "string"
                    },
                    "senderId": {
                        "minimum": 1,
                        "type": "integer",
                        "format": "int64"
                    },
                    "receiverId": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "MessageResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "content": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "sender": {
                        "$ref": "#/components/schemas/UserResponse"
                    },
                    "receiver": {
                        "$ref": "#/components/schemas/UserResponse"
                    }
                }
            },
            "BookRequest": {
                "required": [
                    "author",
                    "genre",
                    "title"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "publisher": {
                        "type": "string"
                    },
                    "publicationDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "isbn": {
                        "type": "string"
                    },
                    "genre": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    }
                }
            },
            "BookResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "publisher": {
                        "type": "string"
                    },
                    "publicationDate": {
                        "type": "string",
                        "format": "date"
                    },
                    "isbn": {
                        "type": "string"
                    },
                    "genre": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    }
                }
            },
            "AnnouncementRequest": {
                "required": [
                    "content"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "content": {
                        "type": "string"
                    }
                }
            },
            "AnnouncementResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "content": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AuthentificationRequest": {
                "required": [
                    "password",
                    "username"
                ],
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "AuthentificationResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    }
                }
            },
            "PageUserResponse": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserResponse"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SortObject"
                        }
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageableObject": {
                "type": "object",
                "properties": {
                    "offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "sort": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SortObject"
                        }
                    },
                    "pageNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "paged": {
                        "type": "boolean"
                    },
                    "unpaged": {
                        "type": "boolean"
                    }
                }
            },
            "SortObject": {
                "type": "object",
                "properties": {
                    "direction": {
                        "type": "string"
                    },
                    "nullHandling": {
                        "type": "string"
                    },
                    "ascending": {
                        "type": "boolean"
                    },
                    "property": {
                        "type": "string"
                    },
                    "ignoreCase": {
                        "type": "boolean"
                    }
                }
            },
            "PageMessageResponse": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageResponse"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SortObject"
                        }
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageBookResponse": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BookResponse"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SortObject"
                        }
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "PageAnnouncementResponse": {
                "type": "object",
                "properties": {
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalElements": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AnnouncementResponse"
                        }
                    },
                    "number": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sort": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SortObject"
                        }
                    },
                    "numberOfElements": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "first": {
                        "type": "boolean"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "pageable": {
                        "$ref": "#/components/schemas/PageableObject"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "JWT Authentification",
                "in": "header",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
